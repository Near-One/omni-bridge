name: Rust CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'near/**'
      - 'omni-relayer/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'near/**'
      - 'omni-relayer/**'

env:
  SCCACHE_GHA_ENABLED: "true"
  RUSTC_WRAPPER: "sccache"

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [near]  # Will be expanded with more components later
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.80.0
          components: clippy, rustfmt
          target: wasm32-unknown-unknown

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.7
        with:
          cache-on-failure: true
          cache-all-crates: true
          shared-key: "lint-${{ matrix.component }}"
          workspaces: ${{ matrix.component }}

      - name: Install cargo-near
        run: |
          curl --proto '=https' --tlsv1.2 -LsSf https://github.com/near/cargo-near/releases/latest/download/cargo-near-installer.sh | sh
          
      - name: Run clippy
        run: make clippy-${{ matrix.component }}

      - name: Run fmt
        run: make fmt-${{ matrix.component }}

  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.80.0
          target: wasm32-unknown-unknown

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.7
        with:
          cache-on-failure: true
          cache-all-crates: true
          shared-key: "build-test"
          workspaces: near
          
      - name: Install cargo-near
        run: |
          curl --proto '=https' --tlsv1.2 -LsSf https://github.com/near/cargo-near/releases/latest/download/cargo-near-installer.sh | sh

      - name: Install nextest
        uses: taiki-e/install-action@v2
        with:
          tool: nextest

      - name: Rust tests
        run: make rust-run-tests
