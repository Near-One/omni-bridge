[redis]
url = "redis://127.0.0.1/"
sleep_time_after_events_process_secs = 1
query_retry_attempts = 10
query_retry_sleep_secs = 1
fee_retry_base_secs = 1.2
fee_retry_max_sleep_secs = 3600 # 60 * 60
keep_transfers_for_secs = 604800 # 60 * 60 * 24 * 7

[bridge_indexer]
# Used to check if provided fee is sufficient to complete the transfer
api_url = "https://testnet.api.bridge.nearone.org/"

mongodb_uri = "mongodb+srv://MONGODB_USERNAME:MONGODB_PASSWORD@MONGODB_HOST/?retryWrites=true&w=majority"
db_name = "testnet_omni_bridge_db"

# Discount that relayer can accept [default: 0]
# fee_discount = 30

[near]
network = "testnet"
rpc_url = "https://rpc.testnet.near.org/"
omni_bridge_id = "omni-locker.testnet"
btc_connector = "brg-dev.testnet"
btc = "nbtc-dev.testnet"
# Either provide a path to a credentials file or set it in the environment
# Note: the path must be absolute
# omni_credentials_path = "/Users/username/.near-credentials/testnet/omni-relayer.testnet.json"
# fast_credentials_path = "/Users/username/.near-credentials/testnet/fast-relayer.testnet.json"
# We won't check fee before signing transfer if account id matches on in array
sign_without_checking_fee = ["near:aurora"]
# To enable fast relayer, uncomment the line below
# fast_relayer_enabled = true

[eth]
rpc_http_url = "https://sepolia.infura.io/v3/INFURA_API_KEY"
rpc_ws_url = "wss://sepolia.infura.io/ws/v3/INFURA_API_KEY"
chain_id = 11_155_111
omni_bridge_address = "0x3701B9859Dbb9a4333A3dd933ab18e9011ddf2C8"
light_client = "client-eth2.sepolia.testnet"
block_processing_batch_size = 10_000
# https://wormhole.com/docs/build/reference/consistency-levels/
expected_finalization_time = 1095
safe_confirmations = 12
error_selectors_to_remove = [
	"0x8baa579f", # InvalidSignature()
	"0xdcf35db0" # FailedToSendEther()
]

[base]
rpc_http_url = "https://base-sepolia.infura.io/v3/INFURA_API_KEY"
rpc_ws_url = "wss://base-sepolia.infura.io/ws/v3/INFURA_API_KEY"
chain_id = 84_532
omni_bridge_address = "0x0C981337fFe39a555d3A40dbb32f21aD0eF33FFA"
wormhole_address = "0x79A1027a6A159502049F10906D333EC57E95F083"
block_processing_batch_size = 10_000
# https://wormhole.com/docs/build/reference/consistency-levels/
expected_finalization_time = 1026
safe_confirmations = 30
error_selectors_to_remove = [
	"0x8baa579f", # InvalidSignature()
	"0xdcf35db0", # FailedToSendEther()
	"696e76616c696420666565" # Wormhole's "invalid fee"
]

[arb]
rpc_http_url = "https://arbitrum-sepolia.infura.io/v3/INFURA_API_KEY"
rpc_ws_url = "wss://arbitrum-sepolia.infura.io/ws/v3/INFURA_API_KEY"
chain_id = 421_614
omni_bridge_address = "0xd025b38762B4A4E36F0Cde483b86CB13ea00D989"
wormhole_address = "0x6b9C8671cdDC8dEab9c719bB87cBd3e782bA6a35"
block_processing_batch_size = 10_000
# https://wormhole.com/docs/build/reference/consistency-levels/
expected_finalization_time = 1066
safe_confirmations = 30
error_selectors_to_remove = [
	"0x8baa579f", # InvalidSignature()
	"0xdcf35db0", # FailedToSendEther()
	"696e76616c696420666565" # Wormhole's "invalid fee"
]

[bnb]
rpc_http_url = "https://bsc-testnet.infura.io/v3/INFURA_API_KEY"
rpc_ws_url = "wss://bsc-testnet-rpc.publicnode.com"
chain_id = 97
omni_bridge_address = "0xEC81aFc3485a425347Ac03316675e58a680b283A"
wormhole_address = "0x68605AD7b15c732a30b1BbC62BE8F2A509D74b4D"
block_processing_batch_size = 10_000
# https://wormhole.com/docs/build/reference/consistency-levels/
expected_finalization_time = 48
safe_confirmations = 10
error_selectors_to_remove = [
	"0x8baa579f", # InvalidSignature()
	"0xdcf35db0", # FailedToSendEther()
	"696e76616c696420666565" # Wormhole's "invalid fee"
]

[solana]
rpc_http_url = "https://api.devnet.solana.com"
rpc_ws_url = "wss://api.devnet.solana.com"
# Program ID on Solana is an account ID whitch the bridge contract (basically bridge_token_factory_address on Solana)
program_id = "Gy1XPwYZURfBzHiGAxnw3SYC33SfqsEpGSS5zeBge28p"
# This is the wormhole contract ID on Solana (can be found here https://wormhole.com/docs/build/reference/contract-addresses/#__tabbed_1_2)
wormhole_id = "3u8hJUVTA4jH1wYAyUur7FFZVQ8H635K3tSHHF4ssjQ5"
deploy_token_emitter_index = 3
deploy_token_discriminator = [144, 104, 20, 192, 18, 112, 224, 140]
# There's a list of account keys and they are store in a strict order. We need indexes to get the right key
init_transfer_sender_index = 5
init_transfer_token_index = 1
init_transfer_emitter_index = 6
init_transfer_sol_sender_index = 1
init_transfer_sol_emitter_index = 2
# Discriminators are used to identify the type of the event (can be found during the building process of solana's contract)
init_transfer_discriminator = [174, 50, 134, 99, 122, 243, 243, 224]
init_transfer_sol_discriminator = [124, 167, 164, 191, 81, 140, 108, 30]
finalize_transfer_emitter_index = 6
finalize_transfer_sol_emitter_index = 5
finalize_transfer_discriminator = [124, 126, 103, 188, 144, 65, 135, 51]
finalize_transfer_sol_discriminator = [104, 27, 121, 69, 3, 70, 217, 66]
# Either provide a path to a keypair file or set it in the environment
# Note: the path must be absolute
# credentials_path = "/Users/username/my-solana-keypair.json"

[btc]
rpc_http_url = "https://bitcoin-testnet-rpc.publicnode.com"
# If this is set to true, then omni relayer will call `sign_btc_transaction`
signing_enabled = false
# If this is set to true, then omni relayer will call `verify_withdraw`
verifying_withdraw_enabled = false

[wormhole]
api_url = "https://api.testnet.wormholescan.io/"
solana_chain_id = 1
